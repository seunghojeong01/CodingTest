5.알파벳 대소문자로 된 단어가 주어지면, 이 단어에서 가장 많이 사용된 알파벳이 무엇인지 알아내는 프로그램을 작성하시오. 단, 대문자와 소문자를 구분하지 않는다.
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        
        String S=br.readLine().toUpperCase();
        int array[]=new int[26];
        for(int i=0;i<S.length();i++) { 	//알파벳 갯수새기
        	array[S.charAt(i)-'A']++;
        }
        int a=0;
        char ch='?';
        for(int i=0;i<array.length;i++) {
        	if(a<array[i]) {
        		a=array[i];				  	//가장 갯수가 높은 알파벳의 갯수 찾기
        		ch=(char) (i+'A');			
        	}else if(a==array[i]) {			//가장 많이 사용된 알파벳이 여러 개 존재하는 경우에는 ?를 출력한다.
        		ch='?';
        	}
        }
      
        bw.write(ch);
        
        bw.flush();
        bw.close();
        br.close();
    }
}

6.예전에는 운영체제에서 크로아티아 알파벳을 입력할 수가 없었다. 따라서, 다음과 같이 크로아티아 알파벳을 변경해서 입력했다.
크로아티아 알파벳	변경
č	c=
ć	c-
dž	dz=
đ	d-
lj	lj
nj	nj
š	s=
ž	z=
예를 들어, ljes=njak은 크로아티아 알파벳 6개(lj, e, š, nj, a, k)로 이루어져 있다. 단어가 주어졌을 때, 몇 개의 크로아티아 알파벳으로 이루어져 있는지 출력한다.
dž는 무조건 하나의 알파벳으로 쓰이고, d와 ž가 분리된 것으로 보지 않는다. lj와 nj도 마찬가지이다. 위 목록에 없는 알파벳은 한 글자씩 센다.

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        
        String S=br.readLine();
        int count=0;
        for (int i = 0; i < S.length(); i++) {
            char ch = S.charAt(i);         
            if (ch == 'c' && i < S.length() - 1) {
                // 다음 문자가 '=' 또는 '-'인 경우
                if (S.charAt(i + 1) == '=' || S.charAt(i + 1) == '-') {
                    i++; // 다음 문자를 건너뛴다
                }
            } else if (ch == 'd' && i < S.length() - 1) {
                // 다음 문자가 '-'인 경우
                if (S.charAt(i + 1) == '-') {
                    i++;
                } else if (i < S.length() - 2 && S.charAt(i + 1) == 'z' && S.charAt(i + 2) == '=') {
                    // "dz="인 경우
                    i += 2; // 다음 다음 문자를 건너뛴다
                }
            } else if ((ch == 'l' || ch == 'n') && i < S.length() - 1 && S.charAt(i + 1) == 'j') {
                // "lj" 또는 "nj"인 경우
                i++;
            } else if ((ch == 's' || ch == 'z') && i < S.length() - 1 && S.charAt(i + 1) == '=') {
                // "s=" 또는 "z="인 경우
                i++;
            }
            
            count++; // 알파벳 개수를 증가시킨다
        }
        
        bw.write(count + "");
        bw.flush();
        bw.close();
        br.close();
    }
}

7.그룹 단어란 단어에 존재하는 모든 문자에 대해서, 각 문자가 연속해서 나타나는 경우만을 말한다. 
예를 들면, ccazzzzbb는 c, a, z, b가 모두 연속해서 나타나고, kin도 k, i, n이 연속해서 나타나기 때문에 그룹 단어이지만
, aabbbccb는 b가 떨어져서 나타나기 때문에 그룹 단어가 아니다.
단어 N개를 입력으로 받아 그룹 단어의 개수를 출력하는 프로그램을 작성하시오.
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        int N=Integer.parseInt(br.readLine());

        int count=N;
        
        for(int i=0;i<N;i++) {
        	String S=br.readLine().toLowerCase();
        	int alphaCnt[]=new int[26];                        //boolean으로 할껄?
        	char ch=' ';
        	for(int j=0;j<S.length();j++) {
        		if(j>0) {	//전에 있던 문자 자정
        			ch=S.charAt(j-1);
        		}
        		if(alphaCnt[S.charAt(j)-'a']==0) {//나온적 없는 문자는 ++
        			alphaCnt[S.charAt(j)-'a']++;
        		}else {
        			if(ch !=S.charAt(j)) {//나온적 있는데 전 문자랑 같지 않으면 --
        				count--;
        				break;			  //ababab이런건 계속 - 되므로 -되면 바로 나가기
        			}
        		}
        	}
        }
        bw.write(count+"");
    
    
        bw.flush();
        bw.close();
        br.close();
    }
}

8.인하대학교 컴퓨터공학과를 졸업하기 위해서는, 전공평점이 3.3 이상이거나 졸업고사를 통과해야 한다. 
그런데 아뿔싸, 치훈이는 깜빡하고 졸업고사를 응시하지 않았다는 사실을 깨달았다!
치훈이의 전공평점을 계산해주는 프로그램을 작성해보자.
전공평점은 전공과목별 (학점 × 과목평점)의 합을 학점의 총합으로 나눈 값이다.
인하대학교 컴퓨터공학과의 등급에 따른 과목평점은 다음 표와 같다.

A+	4.5
A0	4.0
B+	3.5
B0	3.0
C+	2.5
C0	2.0
D+	1.5
D0	1.0
F	0.0
P/F 과목의 경우 등급이 P또는 F로 표시되는데, 등급이 P인 과목은 계산에서 제외해야 한다.
과연 치훈이는 무사히 졸업할 수 있을까?
