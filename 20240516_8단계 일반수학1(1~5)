1.B진법 수 N이 주어진다. 이 수를 10진법으로 바꿔 출력하는 프로그램을 작성하시오.
10진법을 넘어가는 진법은 숫자로 표시할 수 없는 자리가 있다. 이런 경우에는 다음과 같이 알파벳 대문자를 사용한다.
A: 10, B: 11, ..., F: 15, ..., Y: 34, Z: 35

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.StringTokenizer;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        StringTokenizer st=new StringTokenizer(br.readLine());
        String N=st.nextToken();
        int B=Integer.parseInt(st.nextToken());
        
        int A=0;		//10진법 변화된수
        int k=0;		//10이상인 수 ABC...를 저장하기위한 수
        for(int i=N.length()-1;i>=0;i--) {
        	if(N.charAt(i)>='A' && N.charAt(i)<='Z') {
        		k=N.charAt(i)-'A'+10;
        	}else {
        		k=N.charAt(i)-'0';
        	}
        	A+=k*(Math.pow(B, N.length()-1-i));
        	
        }
        bw.write(A+"");
        bw.flush();
        bw.close();
        br.close();
    }
}

2.10진법 수 N이 주어진다. 이 수를 B진법으로 바꿔 출력하는 프로그램을 작성하시오.
10진법을 넘어가는 진법은 숫자로 표시할 수 없는 자리가 있다. 이런 경우에는 다음과 같이 알파벳 대문자를 사용한다.
A: 10, B: 11, ..., F: 15, ..., Y: 34, Z: 35
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.StringTokenizer;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        StringTokenizer st=new StringTokenizer(br.readLine());
        int N=Integer.parseInt(st.nextToken());//주어진 수
        int B=Integer.parseInt(st.nextToken());//진법
        String result="";
        while (N > 0) {
            int remainder = N % B; // 나머지를 구함
            if (remainder >= 10) {
                result += String.valueOf((char)(remainder - 10 + 'A')); // 나머지가 10 이상일 때 알파벳으로 변환
            } else {
                result += String.valueOf(remainder); // 나머지가 10 미만일 때 그대로 문자열에 추가
            }
            N /= B; // N을 B로 나눈 몫을 다시 N에 할당
        }
        result=new StringBuilder(result).reverse().toString();
        bw.write(result);
      
        bw.flush();
        bw.close();
        br.close();
    }
}

3.미국으로 유학간 동혁이는 세탁소를 운영하고 있다. 동혁이는 최근에 아르바이트로 고등학생 리암을 채용했다.동혁이는 리암에게 실망했다.리암은 거스름돈을 주는 것을 자꾸 실수한다.
심지어 $0.5달러를 줘야하는 경우에 거스름돈으로 $5달러를 주는것이다!
어쩔수 없이 뛰어난 코딩 실력을 발휘해 리암을 도와주는 프로그램을 작성하려고 하지만, 디아블로를 하느라 코딩할 시간이 없어서 이 문제를 읽고 있는 여러분이 대신 해주어야 한다.
거스름돈의 액수가 주어지면 리암이 줘야할 쿼터(Quarter, $0.25)의 개수, 다임(Dime, $0.10)의 개수, 니켈(Nickel, $0.05)의 개수, 페니(Penny, $0.01)의 개수를 구하는 프로그램을 작성하시오. 
거스름돈은 항상 $5.00 이하이고,손님이 받는 동전의 개수를 최소로 하려고 한다. 예를 들어, $1.24를 거슬러 주어야 한다면, 손님은 4쿼터, 2데
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.StringTokenizer;

public class Main {
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

		int T = Integer.parseInt(br.readLine());
		int[] coins = { 25, 10, 5, 1 };

		for (int i = 0; i < T; i++) {
			int C = Integer.parseInt(br.readLine());
			StringBuilder result = new StringBuilder();

			for (int coin : coins) {
				result.append(C / coin).append(" ");
				C %= coin;
			}

			bw.write(result+ "\n");
		}

		bw.flush();
		bw.close();
		br.close();
	}
}

2)이거 쓸줄 알면 엄청 좋을꺼같음
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.StringTokenizer;

public class Main {
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

		int T = Integer.parseInt(br.readLine());
		int[] coins = { 25, 10, 5, 1 };

		for (int i = 0; i < T; i++) {
			int C = Integer.parseInt(br.readLine());
			StringBuilder result = new StringBuilder();

			for (int coin : coins) {
				result.append(C / coin).append(" ");
				C %= coin;
			}

			bw.write(result+ "\n");
		}

		bw.flush();
		bw.close();
		br.close();
	}
}

4.상근이는 친구들과 함께 SF영화를 찍으려고 한다. 이 영화는 외계 지형이 필요하다. 실제로 우주선을 타고 외계 행성에 가서 촬영을 할 수 없기 때문에, 컴퓨터 그래픽으로 CG처리를 하려고 한다.
외계 지형은 중앙 이동 알고리즘을 이용해서 만들려고 한다.알고리즘을 시작하면서 상근이는 정사각형을 이루는 점 4개를 고른다. 그 후에는 다음과 같은 과정을 거쳐서 지형을 만든다.
정사각형의 각 변의 중앙에 점을 하나 추가한다.정사각형의 중심에 점을 하나 추가한다.
초기 상태에서 위와 같은 과정을 한 번 거치면 총 4개의 정사각형이 새로 생긴다. 이와 같은 과정을 상근이가 만족할 때 까지 계속한다.
아래 그림은 과정을 총 2번 거쳤을 때까지의 모습이다.

초기 상태 - 점 4개	1번 - 점 9개	2번 - 25개

상근이는 어떤 점은 한 개 보다 많은 정사각형에 포함될 수 있다는 사실을 알았다. 
메모리 소모량을 줄이기 위해서 중복하는 점을 한 번만 저장하려고 한다. 과정을 N번 거친 후 점 몇 개를 저장해야 하는지 구하는 프로그램을 작성하시오.

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.StringTokenizer;

public class Main {
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		
		int basic=2;
		int N = Integer.parseInt(br.readLine());
		for(int i=0;i<N;i++) {
			basic += basic-1;
		}
		basic*=basic;
		bw.write(basic+"");
		
		
		bw.flush();
		bw.close();
		br.close();
	}
}

5.위의 그림과 같이 육각형으로 이루어진 벌집이 있다. 그림에서 보는 바와 같이 중앙의 방 1부터 시작해서 이웃하는 방에 돌아가면서 1씩 증가하는 번호를 주소로 매길 수 있다. 숫자 N이 주어졌을 때,
벌집의 중앙 1에서 N번 방까지 최소 개수의 방을 지나서 갈 때 몇 개의 방을 지나가는지(시작과 끝을 포함하여)를 계산하는 프로그램을 작성하시오. 예를 들면, 13까지는 3개, 58까지는 5개를 지난다.
1번주위로 2~7번이 그 주위로 8~19번이 둘러싼 형상
내가 생각한풀이)
1--7--19--37--61...... 이 각각의 마지막 번호로 개수는 6,12,18,24 차이가 난다.

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.StringTokenizer;

public class Main {
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

		int N = Integer.parseInt(br.readLine());
		int i = 1;
		int k = 1;
		int result = 0;
		while (i < N) {
			i = i + (k * 6);
			if (i < N) {
				k++;
			} else {
				result=k;
			}
		}
		bw.write(String.valueOf(result+1));
		bw.flush();
		bw.close();
		br.close();
	}
}
