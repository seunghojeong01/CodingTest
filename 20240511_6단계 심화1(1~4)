1.아래 예제와 같이 새싹을 출력하시오.
import java.io.IOException;
public class Main {

	public static void main(String[] args) throws IOException {
		System.out.println("         ,r'\"7");
		System.out.println("r`-_   ,'  ,/");
		System.out.println(" \\. \". L_r'");
		System.out.println("   `~\\/");
		System.out.println("      |");
		System.out.println("      |");
			     
	
	}
}

2.동혁이는 오래된 창고를 뒤지다가 낡은 체스판과 피스를 발견했다.
체스판의 먼지를 털어내고 걸레로 닦으니 그럭저럭 쓸만한 체스판이 되었다. 하지만, 검정색 피스는 모두 있었으나, 흰색 피스는 개수가 올바르지 않았다.
체스는 총 16개의 피스를 사용하며, 킹 1개, 퀸 1개, 룩 2개, 비숍 2개, 나이트 2개, 폰 8개로 구성되어 있다.
동혁이가 발견한 흰색 피스의 개수가 주어졌을 때, 몇 개를 더하거나 빼야 올바른 세트가 되는지 구하는 프로그램을 작성하시오.

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.StringTokenizer;
public class Main {

	public static void main(String[] args) throws IOException {
	 BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
	 BufferedWriter bw=new BufferedWriter(new OutputStreamWriter(System.out));
	 StringTokenizer st=new StringTokenizer(br.readLine());
	 int array[]= {1,1,2,2,2,8};
	 for(int i=0;i<array.length;i++) {
		 int k=array[i]-Integer.parseInt(st.nextToken());
		 bw.write(k+" ");
	 }
	 bw.flush();
	 bw.close();
	 br.close();
	}
}

3.예제를 보고 규칙을 유추한 뒤에 별을 찍어 보세요.첫째 줄에 N(1 ≤ N ≤ 100)이 주어진다.첫째 줄부터 2×N-1번째 줄까지 차례대로 별을 출력한다.(다이아몬드)
1)
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
public class Main {

	public static void main(String[] args) throws IOException {
	 BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
	 BufferedWriter bw=new BufferedWriter(new OutputStreamWriter(System.out));
	 int N=Integer.parseInt(br.readLine());
	 for(int i=0;i<2*N;i++) {
		 if(i<N) {						//다이아몬드 상단부
			 for(int j=0;j<N-i-1;j++) {
				 bw.write(" ");
			 }
			 for(int j=0;j<(2*(i+1))-1;j++) {
				 bw.write("*");
			 }
			 bw.write("\n");
		 }
		 if(i>N) {						//하단부
			 for(int j=0;j<i-N;j++) {
				 bw.write(" ");
			 }
			 for(int j=0;j<2*(N-(i-N))-1;j++) {
				 bw.write("*");
			 }
			 bw.write("\n");
		 }
	 }
	 
	 bw.flush();
	 bw.close();
	 br.close();
	}
}

2)삼항연산자로 간결하게 줄이기
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        int N = Integer.parseInt(br.readLine());

        for (int i = 0; i < 2 * N - 1; i++) {
            int stars = i < N ? 2 * i + 1 : 2 * (2 * N - i - 2) + 1;
            int spaces = (2 * N - 1 - stars) / 2;

            for (int j = 0; j < spaces; j++) {
                bw.write(" ");
            }
            for (int j = 0; j < stars; j++) {
                bw.write("*");
            }
            bw.write("\n");
        }

        bw.flush();
        bw.close();
        br.close();
    }
}

4.알파벳 소문자로만 이루어진 단어가 주어진다. 이때, 이 단어가 팰린드롬인지 아닌지 확인하는 프로그램을 작성하시오.
팰린드롬이란 앞으로 읽을 때와 거꾸로 읽을 때 똑같은 단어를 말한다. 
level, noon은 팰린드롬이고, baekjoon, online, judge는 팰린드롬이 아니다.
1)
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        String S=br.readLine();
        String array[]=new String[S.length()]; 
        for(int i=0;i<S.length();i++) {				//입력받은 문자열 저장
        	array[i]=String.valueOf(S.charAt(i));
        }
       
        boolean b=true;
        int a=array.length-1;
        for(int i=0;i<a;i++) {					//비
        	if(array[i].equals(array[a])) {
        		b=true;
        		a--;
        	}else {
        		b=false;
        		break;
        	}
        }
        if(b) {
        	bw.write("1");
        }else {
        	bw.write("0");
        }
        bw.flush();
        bw.close();
        br.close();
    }
}

2)굳이 배열을 써야하나?
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        String S = br.readLine();

        boolean isPalindrome = true;
        int start = 0; // 문자열의 시작 인덱스
        int end = S.length() - 1; // 문자열의 마지막 인덱스

        while(start < end) {
            if(S.charAt(start) != S.charAt(end)) {
                isPalindrome = false;
                break;
            }
            start++;
            end--;
        }

        if(isPalindrome) {
            bw.write("1");
        } else {
            bw.write("0");
        }

        bw.flush();
        br.close();
        bw.close();
    }
}
