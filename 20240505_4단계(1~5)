1.총 N개의 정수가 주어졌을 때, 정수 v가 몇 개인지 구하는 프로그램을 작성하시오.
import java.io.*;
import java.util.StringTokenizer;
public class Main {

	public static void main(String[] args) throws IOException {
	BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
	BufferedWriter bw=new BufferedWriter(new OutputStreamWriter(System.out));
	
	int n= Integer.parseInt(br.readLine());  //총 N개의 숫자 ?
	int array[]=new int[n];
	StringTokenizer st =new StringTokenizer(br.readLine());
	for(int i=0;i<n;i++) {
		array[i]=Integer.parseInt(st.nextToken());
	}
	int V= Integer.parseInt(br.readLine());  //정수 V
	int count=0;							 //n개의 숫자중 V와 같은 수의 갯수
	
	for(int i=0;i<n;i++) {
		if(array[i]== V) {
			count++;
		}
	}
	bw.write(String.valueOf(count));
	bw.flush();
	bw.close();
	br.close();

 }
}

2.정수 N개로 이루어진 수열 A와 정수 X가 주어진다. 이때, A에서 X보다 작은 수를 모두 출력하는 프로그램을 작성하시오.
import java.io.*;
import java.util.StringTokenizer;
public class Main {

	public static void main(String[] args) throws IOException {
	BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
	BufferedWriter bw=new BufferedWriter(new OutputStreamWriter(System.out));
	StringTokenizer st1 =new StringTokenizer(br.readLine());
	int n= Integer.parseInt(st1.nextToken());  //n개의 숫자를 가진 배열
	int arrayA[]=new int[n];
	int x=Integer.parseInt(st1.nextToken());   //정수 x
	
	StringTokenizer st2=new StringTokenizer(br.readLine());
	for(int i=0;i<n;i++) {
		arrayA[i]= Integer.parseInt(st2.nextToken()); 
	}
	
	for(int i=0;i<n;i++) {
		if(arrayA[i]<x) {
			bw.write(arrayA[i]+" ");
		}
	}
	

	bw.flush();
	bw.close();
	br.close();

 }
}

3.N개의 정수가 주어진다. 이때, 최솟값과 최댓값을 구하는 프로그램을 작성하시오.
import java.io.*;
import java.util.StringTokenizer;
public class Main {

	public static void main(String[] args) throws IOException {
	BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
	BufferedWriter bw=new BufferedWriter(new OutputStreamWriter(System.out));
	
	int n= Integer.parseInt(br.readLine());  //n개의 숫자를 가진 배열
	int arrayA[]=new int[n];
	
	StringTokenizer st=new StringTokenizer(br.readLine());
	for(int i=0;i<n;i++) {
	 arrayA[i]=Integer.parseInt(st.nextToken());
	}
	int minNum = arrayA[0];                        //다시 생각해보니  이거 그냥 0으로 둬도됨
	int maxNum = arrayA[0];
	for(int i=0;i<n;i++) {
		minNum=Math.min(minNum, arrayA[i]);
		maxNum=Math.max(maxNum, arrayA[i]);
	}
	bw.write(minNum+" "+maxNum);
	

	bw.flush();
	bw.close();
	br.close();

 }
}

4.9개의 서로 다른 자연수가 주어질 때, 이들 중 최댓값을 찾고 그 최댓값이 몇 번째 수인지를 구하는 프로그램을 작성하시오.
  예를 들어, 서로 다른 9개의 자연수
  3, 29, 38, 12, 57, 74, 40, 85, 61
  이 주어지면, 이들 중 최댓값은 85이고, 이 값은 8번째 수이다.
import java.io.*;
import java.util.StringTokenizer;
public class Main {

	public static void main(String[] args) throws IOException {
	BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
	BufferedWriter bw=new BufferedWriter(new OutputStreamWriter(System.out));
	
	int n= 9;  
	int arrayA[]=new int[n];
	for(int i=0;i<n;i++) {
		arrayA[i]=Integer.parseInt(br.readLine());
	}
    int maxNum=0;
    int count=1;
    
    for(int i=0;i<n;i++) {                     //최댓값 구하기
    	maxNum=Math.max(maxNum, arrayA[i]);
    }
    for(int i=0;maxNum != arrayA[i];i++) {     //몇 번째 수인지 구하기
    	count++;
    }


	/* 최댓값과 그 위치를 한 번의 순회로 찾기
	 * int maxNum=0; int count=0;
	 * 
	 * for (int i = 0; i < n; i++) {          
   *    if (arrayA[i] >maxNum) {
   *         maxNum = arrayA[i];
   *         count = i + 1; // 배열의 인덱스는 0부터 시작하지만, 문제에서의 위치는 1부터 시작하므로 +1 
   *         }
	 *  }
	 */
  
  bw.write(maxNum+"\n"+count);
	bw.flush();
	bw.close();
	br.close();

 }
}

5.도현이는 바구니를 총 N개 가지고 있고, 각각의 바구니에는 1번부터 N번까지 번호가 매겨져 있다. 또, 1번부터 N번까지 번호가 적혀있는 공을 매우 많이 가지고 있다. 
  가장 처음 바구니에는 공이 들어있지 않으며, 바구니에는 공을 1개만 넣을 수 있다.
  도현이는 앞으로 M번 공을 넣으려고 한다. 도현이는 한 번 공을 넣을 때, 공을 넣을 바구니 범위를 정하고, 정한 바구니에 모두 같은 번호가 적혀있는 공을 넣는다. 
  만약, 바구니에 공이 이미 있는 경우에는 들어있는 공을 빼고, 새로 공을 넣는다.
  공을 넣을 바구니는 연속되어 있어야 한다.
  공을 어떻게 넣을지가 주어졌을 때, M번 공을 넣은 이후에 각 바구니에 어떤 공이 들어 있는지 구하는 프로그램을 작성하시오.
  1번 바구니부터 N번 바구니에 들어있는 공의 번호를 공백으로 구분해 출력한다. 공이 들어있지 않은 바구니는 0을 출력한다.
  
import java.io.*;
import java.util.StringTokenizer;
public class Main {

	public static void main(String[] args) throws IOException {
	BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
	BufferedWriter bw=new BufferedWriter(new OutputStreamWriter(System.out));
	
	StringTokenizer st1=new StringTokenizer(br.readLine());
	int N=Integer.parseInt(st1.nextToken()); //바구니 수
	int M=Integer.parseInt(st1.nextToken()); //몇번 공을 넣을 것인지
	
	int array[]=new int[N];
	
	for(int x=0;x<M;x++) {
		StringTokenizer st2=new StringTokenizer(br.readLine());
		int i=Integer.parseInt(st2.nextToken()); //여기서부터
		int j=Integer.parseInt(st2.nextToken()); //여기까지
		int k=Integer.parseInt(st2.nextToken()); //k공을 넣는다.
		
		for(int y=i-1;y<=j-1;y++) {
			array[y]=k;
		}
	}
	for(int i=0; i<array.length;i++) {
		bw.write(array[i]+" ");
	}
	bw.flush();
	bw.close();
	br.close();

 }
}
