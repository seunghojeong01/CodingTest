7.문제
세 개의 장대가 있고 첫 번째 장대에는 반경이 서로 다른 n개의 원판이 쌓여 있다. 각 원판은 반경이 큰 순서대로 쌓여있다. 이제 수도승들이 다음 규칙에 따라 첫 번째 장대에서 세 번째 장대로 옮기려 한다.

한 번에 한 개의 원판만을 다른 탑으로 옮길 수 있다.
쌓아 놓은 원판은 항상 위의 것이 아래의 것보다 작아야 한다.
이 작업을 수행하는데 필요한 이동 순서를 출력하는 프로그램을 작성하라. 단, 이동 횟수는 최소가 되어야 한다.

아래 그림은 원판이 5개인 경우의 예시이다.

입력
첫째 줄에 첫 번째 장대에 쌓인 원판의 개수 N (1 ≤ N ≤ 20)이 주어진다.

출력
첫째 줄에 옮긴 횟수 K를 출력한다.

두 번째 줄부터 수행 과정을 출력한다. 두 번째 줄부터 K개의 줄에 걸쳐 두 정수 A B를 빈칸을 사이에 두고 출력하는데, 이는 A번째 탑의 가장 위에 있는 원판을 B번째 탑의 가장 위로 옮긴다는 뜻이다.

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;

public class Main {
    
    private static int moveCount = 0;
    private static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
    private static StringBuilder sb=new StringBuilder();
    public static void hanoi(int n, int from, int to, int aux) {
        if (n == 1) {
            // 원판이 한 개일 경우 바로 이동
            sb.append(from + " " + to+"\n");
            moveCount++;
            return;
        }
        
        // n-1개의 원판을 보조 장대로 이동
        hanoi(n - 1, from, aux, to);
        
        // 가장 큰 원판을 목표 장대로 이동
        sb.append(from + " " + to+"\n");
        moveCount++;
        
        // 보조 장대에 있는 n-1개의 원판을 목표 장대로 이동
        hanoi(n - 1, aux, to, from);
    }
    
    public static void main(String[] args) throws NumberFormatException, IOException {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        
        // 원판의 개수 입력 받기
        int n = Integer.parseInt(br.readLine());
        
        // 하노이 탑 함수 호출
        hanoi(n, 1, 3, 2);
        
        sb.insert(0, moveCount+"\n");
        // 이동 횟수 출력
        bw.write(sb.toString());
        bw.flush();
        bw.close();
        br.close();
  
       
    }
}
